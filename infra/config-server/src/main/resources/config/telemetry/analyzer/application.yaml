grpc:
  client:
    hub-router:
      address: static://localhost:59090
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext
kafka:
  consumer:
    close-timeout: 5000
    hub-client-id-config: hub-event-consumer
    hub-group-id: hub-analyzer-group
    hub-key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    hub-value-deserializer: ru.yandex.practicum.deserializer.HubEventDeserializer
    poll-timeout: 1000
    snapshot-client-id-config: snapshot-consumer
    snapshot-group-id: snapshot-analyzer-group
    snapshot-key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    snapshot-value-deserializer: ru.yandex.practicum.deserializer.SensorSnapshotDeserializer
  producer:
    bootstrap-server: localhost:9092
  topic:
    snapshots: telemetry.snapshots.v1
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
      springframework:
        orm:
          jpa: INFO
          jpa.JpaTransactionManager: DEBUG
        transaction: INFO
        transaction.interceptor: TRACE
retry:
  initial-interval: 1000
  max-attempts: 3
  multiplier: 2
spring:
  datasource:
    driverClassName: org.postgresql.Driver
    password: postgres
    url: jdbc:postgresql://localhost:5433/analyzer
    username: postgres
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  output:
    ansi:
      enabled: ALWAYS
  sql:
    init:
      mode: always