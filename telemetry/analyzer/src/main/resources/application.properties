kafka.producer.bootstrap-server=localhost:9092

kafka.topic.snapshots=telemetry.snapshots.v1
kafka.consumer.poll-timeout=1000
kafka.consumer.close-timeout=5000

kafka.consumer.hub-group-id=hub-analyzer-group
kafka.consumer.hub-client-id-config=hub-event-consumer
kafka.consumer.hub-key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.consumer.hub-value-deserializer=ru.yandex.practicum.deserializer.HubEventDeserializer

kafka.consumer.snapshot-group-id=snapshot-analyzer-group
kafka.consumer.snapshot-client-id-config=snapshot-consumer
kafka.consumer.snapshot-key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
kafka.consumer.snapshot-value-deserializer=ru.yandex.practicum.deserializer.SensorSnapshotDeserializer

#
spring.jpa.show-sql=true
spring.output.ansi.enabled=ALWAYS
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always

#
logging.level.org.springframework.orm.jpa=INFO
logging.level.org.springframework.transaction=INFO
logging.level.org.springframework.transaction.interceptor=TRACE
logging.level.org.springframework.orm.jpa.JpaTransactionManager=DEBUG
logging.level.org.hibernate.SQL=DEBUG

#
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5433/analyzer
spring.datasource.username=postgres
spring.datasource.password=postgres

#
grpc.client.hub-router.address=static://localhost:59090
grpc.client.hub-router.enableKeepAlive=true
grpc.client.hub-router.keepAliveWithoutCalls=true
grpc.client.hub-router.negotiationType=plaintext